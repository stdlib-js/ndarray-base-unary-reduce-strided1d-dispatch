// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-empty-collection@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function-array@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-output-data-type-policy@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-input-casting-policy@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-reduce-strided1d@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-output-dtype@v0.2.2-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-input-casting-dtype@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-resolve-enum@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-spread-dimensions@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.2-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ndims@v0.2.2-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype@v0.2.2-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-order@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assign@v0.1.1-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-empty@v0.3.0-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-indices-complement@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take-indexed@v0.2.2-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zero-to@v0.2.1-esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-copy@v0.2.2-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-every-by@v0.2.2-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.2-esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import{isPrimitive as q}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{primitives as L}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer-array@v0.2.2-esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-to-unique-normalized-indices@esm/index.mjs";var B={dims:null,keepdims:!1};function C(t,e,s,r){var i;if(!S(r))return new TypeError(O("null2V",r));if(z(r,"keepdims")&&(t.keepdims=r.keepdims,!q(t.keepdims)))return new TypeError(O("null2o","keepdims",t.keepdims));if(z(r,"dims")){if(t.dims=r.dims,!L(t.dims)&&!d(t.dims))return new TypeError(O("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",t.dims));if(null===(i=R(t.dims,e-1)))return new RangeError(O("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",F(t.dims,",")));if(i.length!==t.dims.length)return new Error(O("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",F(t.dims,",")));t.dims=i}return z(r,"dtype")&&(t.dtype=r.dtype,!l(s,t.dtype))?new TypeError(O("null4S","dtype",F(s,'", "'),t.dtype)):null}function G(t,e,s,r,i,n,d,a,o){var m,p,l,h;for(m=n,l=0;l<t;l++){for(p=o,h=0;h<e&&s[m+h*i]===d[p];h++)p+=a;if(h===e)return l;m+=r}return-1}function H(t){var e,s;for(e=[],s=0;s<t.length;s++)e.push(f(t[s]));return e}function I(t,e){var s,r,i;for(s=[],r=0,i=0;r<=t.length;r++)1===r?s.push(e):(s.push(t[i]),i+=1);return s}function J(t,s,l,h){var u,y;if(!(this instanceof J))return new J(t,s,l,h);if(!r(t))throw new TypeError(O("null3L",t));if(!i(t.default))throw new TypeError(O('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(e(t,"types")&&!n(t.types)&&!d(t.types))throw new TypeError(O('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(e(t,"fcns")&&!a(t.fcns)&&!d(t.fcns))throw new TypeError(O('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!n(s))throw new TypeError(O("null2y",s));for(y=0;y<s.length;y++)if(u=s[y],!n(u)||u.length<1||!A(u,o))throw new TypeError(O("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",s));if(!n(l)||l.length<1||!A(l,o))throw new TypeError(O("invalid argument. Third argument must be an array of data types. Value: `%s`.",l));if(!r(h))throw new TypeError(O("null43",t));if(!m(h.output))throw new TypeError(O("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",h.output));if(!p(h.casting))throw new TypeError(O("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",h.casting));if(this._table={default:t.default,types:t.types?H(t.types):[],fcns:t.fcns?V(t.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An input ndarray data type must be specified for each provided strided function.");return this._idtypes=s,this._odtypes=l,this._policies={output:h.output,casting:h.casting},this}t(J.prototype,"apply",(function(t){var e,r,i,n,d,a,o,m,p,g,V,A,S,z,q,L,R,H;if(i=arguments.length,!s(t))throw new TypeError(O("null5t",t));if(A=v(t),!l(this._idtypes[0],A))throw new TypeError(O('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',F(this._idtypes[0],'", "'),A));for(n=[t],H=1;H<i&&s(g=arguments[H]);H++){if(z=v(g),!l(this._idtypes[H],z))throw new TypeError(O('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',H,F(this._idtypes[H],'", "'),z));n.push(g)}if(H<i-1)throw new TypeError(O("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",H,arguments[H]));if(L=(m=c(t)).length,d=D({},B),i>H&&(e=arguments[i-1],a=C(d,L,this._odtypes,e)))throw a;return null===d.dims&&(d.dims=k(L)),o=E(L,d.dims),p=T(m,o),S=d.dtype||u(A,this._policies.output),R=_(p,{dtype:S,order:b(t)}),A!==(z=y(A,S,this._policies.casting))&&(V=x(z,m,b(t)),w([t,V]),n[0]=V,A=z),r=[f(A)],q=(H=G(this._table.fcns.length,1,this._table.types,1,1,0,r,1,0))>=0?this._table.fcns[H]:this._table.default,h(q,I(n,R),d.dims),d.keepdims&&(R=j(L,R,o)),R})),t(J.prototype,"assign",(function t(e){var r,i,n,d,a,o,m,p,u,j,w,_,E,T,V;if(n=arguments.length,!s(e))throw new TypeError(O("null5t",e));if(u=v(e),!l(this._idtypes[0],u))throw new TypeError(O('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',F(this._idtypes[0],'", "'),u));for(a=[e],V=1;V<n&&s(o=arguments[V]);V++)a.push(o);if(V<2)throw new TypeError(O("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(V===n-1)r=arguments[V],p=!0;else if(V<n-1)throw new TypeError(O("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",V,arguments[V]));for(T=a.pop(),V=1;V<a.length;V++)if(w=v(a[V]),!l(this._idtypes[V],w))throw new TypeError(O('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',V,F(this._idtypes[V],'", "'),w));if(_=g(e),d=D({},B),p&&(m=C(d,_,this._odtypes,r)))throw m;return null===d.dims&&(d.dims=k(_)),u!==(w=y(u,v(T),this._policies.casting))&&(t([e,j=x(w,c(e),b(e))]),a[0]=j,u=w),i=[f(u)],E=(V=G(this._table.fcns.length,1,this._table.types,1,1,0,i,1,0))>=0?this._table.fcns[V]:this._table.default,h(E,I(a,T),d.dims),T}));export{J as default};
//# sourceMappingURL=index.mjs.map
