// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-empty-collection@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function-array@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-output-data-type-policy@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-input-casting-policy@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-reduce-strided1d@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-output-dtype@v0.2.2-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-input-casting-dtype@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-resolve-enum@v0.2.2-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtypes2enums@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-spread-dimensions@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.2-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ndims@v0.2.2-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-order@v0.2.2-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assign@v0.1.1-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-empty@v0.3.0-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-indices-complement@esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take-indexed@v0.2.2-esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zero-to@v0.2.1-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-copy@v0.2.2-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-insert-at@esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-every-by@v0.2.2-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.2-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import L from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import{isPrimitive as R}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{primitives as B}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer-array@v0.2.2-esm/index.mjs";import C from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-to-unique-normalized-indices@esm/index.mjs";var G={dims:null,keepdims:!1};function H(t,e,s,r){var i;if(!q(r))return new TypeError(z("null2V",r));if(L(r,"keepdims")&&(t.keepdims=r.keepdims,!R(t.keepdims)))return new TypeError(z("null2o","keepdims",t.keepdims));if(L(r,"dims")){if(t.dims=r.dims,!B(t.dims)&&!d(t.dims))return new TypeError(z("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",t.dims));if(null===(i=C(t.dims,e-1)))return new RangeError(z("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",V(t.dims,",")));if(i.length!==t.dims.length)return new Error(z("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",V(t.dims,",")));t.dims=i}return L(r,"dtype")&&(t.dtype=r.dtype,!l(s,t.dtype))?new TypeError(z("null4S","dtype",V(s,'", "'),t.dtype)):null}function I(t,e,s,r,i,n,d,a,o){var m,p,l,h;for(m=n,l=0;l<t;l++){for(p=o,h=0;h<e&&s[m+h*i]===d[p];h++)p+=a;if(h===e)return l;m+=r}return-1}function J(t,s,l,h){var u,y;if(!(this instanceof J))return new J(t,s,l,h);if(!r(t))throw new TypeError(z("null3L",t));if(!i(t.default))throw new TypeError(z('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(e(t,"types")&&!n(t.types)&&!d(t.types))throw new TypeError(z('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(e(t,"fcns")&&!a(t.fcns)&&!d(t.fcns))throw new TypeError(z('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!n(s))throw new TypeError(z("null2y",s));for(y=0;y<s.length;y++)if(u=s[y],!n(u)||u.length<1||!O(u,o))throw new TypeError(z("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",s));if(!n(l)||l.length<1||!O(l,o))throw new TypeError(z("invalid argument. Third argument must be an array of data types. Value: `%s`.",l));if(!r(h))throw new TypeError(z("null43",h));if(!m(h.output))throw new TypeError(z("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",h.output));if(!p(h.casting))throw new TypeError(z("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",h.casting));if(this._table={default:t.default,types:t.types?f(t.types):[],fcns:t.fcns?A(t.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An input ndarray data type must be specified for each provided strided function.");return this._idtypes=s,this._odtypes=l,this._policies={output:h.output,casting:h.casting},this}t(J.prototype,"apply",(function(t){var e,r,i,n,d,a,o,m,p,f,v,A,O,q,L,R,B,C;if(i=arguments.length,!s(t))throw new TypeError(z("null5t",t));if(A=b(t),!l(this._idtypes[0],A))throw new TypeError(z('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',V(this._idtypes[0],'", "'),A));for(n=[t],C=1;C<i&&s(f=arguments[C]);C++){if(q=b(f),!l(this._idtypes[C],q))throw new TypeError(z('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',C,V(this._idtypes[C],'", "'),q));n.push(f)}if(C<i-1)throw new TypeError(z("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",C,arguments[C]));if(R=(m=g(t)).length,d=S({},G),i>C&&(e=arguments[i-1],a=H(d,R,this._odtypes,e)))throw a;return null===d.dims&&(d.dims=F(R)),o=T(R,d.dims),p=k(m,o),O=d.dtype||u(A,this._policies.output),B=E(p,{dtype:O,order:w(t)}),A!==(q=y(A,O,this._policies.casting))&&(v=_(q,m,w(t)),x([t,v]),n[0]=v,A=q),r=[j(A)],L=(C=I(this._table.fcns.length,1,this._table.types,1,1,0,r,1,0))>=0?this._table.fcns[C]:this._table.default,h(L,D(n,1,B),d.dims),d.keepdims&&(B=c(R,B,o)),B})),t(J.prototype,"assign",(function t(e){var r,i,n,d,a,o,m,p,u,f,c,x,E,T,k;if(n=arguments.length,!s(e))throw new TypeError(z("null5t",e));if(u=b(e),!l(this._idtypes[0],u))throw new TypeError(z('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',V(this._idtypes[0],'", "'),u));for(a=[e],k=1;k<n&&s(o=arguments[k]);k++)a.push(o);if(k<2)throw new TypeError(z("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(k===n-1)r=arguments[k],p=!0;else if(k<n-1)throw new TypeError(z("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",k,arguments[k]));for(T=a.pop(),k=1;k<a.length;k++)if(c=b(a[k]),!l(this._idtypes[k],c))throw new TypeError(z('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',k,V(this._idtypes[k],'", "'),c));if(x=v(e),d=S({},G),p&&(m=H(d,x,this._odtypes,r)))throw m;return null===d.dims&&(d.dims=F(x)),u!==(c=y(u,b(T),this._policies.casting))&&(t([e,f=_(c,g(e),w(e))]),a[0]=f,u=c),i=[j(u)],E=(k=I(this._table.fcns.length,1,this._table.types,1,1,0,i,1,0))>=0?this._table.fcns[k]:this._table.default,h(E,D(a,1,T),d.dims),T}));export{J as default};
//# sourceMappingURL=index.mjs.map
